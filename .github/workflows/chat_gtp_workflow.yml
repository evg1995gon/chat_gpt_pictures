name: Django-app workflow

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'


    - name: Install dependencies
      run: | 
        python -m pip install --upgrade pip 
        pip install flake8
        pip install -r ./requirements.txt 
    - name: Test with flake8 and django tests
      run: |
        python -m flake8


  build_and_push_to_docker_hub:

    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:

      - name: Check out the repo
        uses: actions/checkout@v2
        

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1 

      - name: Login to Docker 
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to Docker Hub Backend
        uses: docker/build-push-action@v2 
        with:
          push: true
          context: ./chatGPT/
          file: ./chatGPT/Dockerfile
          tags: evg1995gon/chat_gpt:latest


  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          port: ${{ secrets.PORT }}
          script: |
            rm -rf chat_gpt_pictures

            sudo git clone git@github.com:evg1995gon/chat_gpt_pictures.git
            cd chat_gpt_pictures/
            rm -rf db
            cd infra/

            sudo docker compose stop
            sudo docker stop $(docker ps -aq)
            sudo docker rm $(docker ps -aq)
            sudo docker rmi $(docker images -a -q)
            sudo docker volume rm $(docker volume ls -q)

            sudo true > .env
            sudo echo OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} >> .env
            sudo echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
            sudo echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            sudo echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            sudo echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            sudo echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            sudo echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            sudo echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            sudo echo LOCAL_DEVELOPMENT=${{ secrets.LOCAL_DEVELOPMENT }} >> .env
            sudo echo DJANGO_SUPERUSER_PASSWORD=${{ secrets.DJANGO_SUPERUSER_PASSWORD }} >> .env

            sudo docker compose up -d --build
            sudo docker compose exec chat_gpt python manage.py makemigrations
            sudo docker compose exec chat_gpt python manage.py migrate
            sudo docker compose exec chat_gpt python manage.py collectstatic --no-input